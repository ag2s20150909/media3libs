# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      # Checks-out Media3
      - uses: actions/checkout@v4
        with:
          repository: androidx/media 
          ref: refs/heads/release
          fetch-depth: 1
      # Set up NDK
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r21e
          local-cache: true
          add-to-path: true
      # Build FFmpeg
      - name: Build FFmpeg
        env:
          ANDROID_NDK_HOME: ${{steps.setup-ndk.outputs.ndk-path }}
          FFMPEG_MODULE_PATH: ${{ github.workspace }}/libraries/decoder_ffmpeg/src/main
          NDK_PATH: ${{ steps.setup-ndk.outputs.ndk-path }}
          HOST_PLATFORM: "linux-x86_64"
          ENABLED_DECODERS: "(vorbis flac alac pcm_mulaw pcm_alaw mp3 aac ac3 eac3 dca mlp truehd)"
        run: |
         set eux
         echo "Build FFmpeg"
         echo $ANDROID_NDK_HOME
         echo $FFMPEG_MODULE_PATH
         echo $NDK_PATH
         echo $HOST_PLATFORM
         echo $ENABLED_DECODERS
         cd "${FFMPEG_MODULE_PATH}/jni"
         git clone git://source.ffmpeg.org/ffmpeg
         cd ffmpeg
         git checkout release/4.2
         FFMPEG_PATH="$(pwd)"
         echo
         cd "${FFMPEG_MODULE_PATH}/jni"
         chmod +x ./build_ffmpeg.sh
         source ./build_ffmpeg.sh "${FFMPEG_MODULE_PATH}" "${NDK_PATH}" "${HOST_PLATFORM}" "${ENABLED_DECODERS[@]}"
        

      # Build FFmpeg aar
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
    
      - name: Set up Gradle
        uses: gradle/gradle-build-action@v2

      
      - name: Build aar
        run: |
          gradle :lib-decoder-ffmpeg build

      # Runs a set of commands using the runners shell
      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        with:
          name: "ffmpeg"
          path: ${{ github.workspace }}/libraries/decoder_ffmpeg/build/outputs
